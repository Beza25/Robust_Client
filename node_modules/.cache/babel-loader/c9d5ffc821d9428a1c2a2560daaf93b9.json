{"ast":null,"code":"var _jsxFileName = \"/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Containers/HomePage.js\";\nimport React, { Component } from 'react';\nimport ClassCard from \"../Components/ClassCard\";\nimport { connect } from \"react-redux\";\nconst url = \"http://localhost:3001/klasses\";\n\nclass HomePage extends Component {\n  // Problem: getting the all klasses from api and dispatching it to store\n  //           so that inital state has all klasses at the beginig\n  // Solution: Request GET Fetch request when the component did monunt \n  componentDidMount() {\n    fetch(url).then(resp => resp.json()).then(klasses => {\n      // console.log(klasses)\n      // normally in react this.setState{ classes }\n      // but now we don't want our component to handle state\n      // must be invoked\n      this.props.fetchedKlasses(klasses);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \" My Clasess\"));\n  }\n\n} // i want to get the sate from star and snik it as props\n// End product \n// Solution use connect (mapstatToProps) to map the state to props\n// mapstatToProps is a function that accepts the state from the store and return \n//    props with key and value \n// export the enhanced HomePage \n// on Load of this page, dispatch an action that is FETCHED_KLASSES\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n    fetchedKlasses: klasses => {\n      dispatch({\n        type: \"FETCHED_KLASSES\",\n        payload: klasses\n      });\n    }\n  };\n}; // accepts state and returns an object that props map to the state\n\n\nconst mapStateToProps = state => {\n  return {\n    klasses: state.klasses\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage); //Problem : if we have the fecth call on this component, our app fetchs whenever the mainpage is \n//           clicked. \n// Goal : we want to fetch only once","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Containers/HomePage.js"],"names":["React","Component","ClassCard","connect","url","HomePage","componentDidMount","fetch","then","resp","json","klasses","props","fetchedKlasses","render","mapDispatchToProps","dispatch","type","payload","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,GAAG,GAAG,+BAAZ;;AACC,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE9B;AACA;AAEA;AAEAK,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAACH,GAAD,CAAL,CACCI,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,OAAO,IAAI;AACb;AACA;AACA;AACA;AACA,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,OAA1B;AACH,KARD;AASH;;AACDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ;AAaH;;AAjC6B,C,CAoClC;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AAEF;AACFH,IAAAA,cAAc,EAAGF,OAAD,IAAa;AAAEK,MAAAA,QAAQ,CAAG;AAACC,QAAAA,IAAI,EAAE,iBAAP;AAA0BC,QAAAA,OAAO,EAAEP;AAAnC,OAAH,CAAR;AAAwD;AAHnF,GAAN;AAMH,CAPD,C,CASA;;;AACA,MAAMQ,eAAe,GAAKC,KAAF,IAAY;AAChC,SAAO;AACHT,IAAAA,OAAO,EAAES,KAAK,CAACT;AADZ,GAAP;AAIH,CALD;;AAOA,eAAeR,OAAO,CAACgB,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport ClassCard from \"../Components/ClassCard\"\nimport {connect} from \"react-redux\"\n\nconst url = \"http://localhost:3001/klasses\"\n class HomePage extends Component {\n\n    // Problem: getting the all klasses from api and dispatching it to store\n    //           so that inital state has all klasses at the beginig\n    \n    // Solution: Request GET Fetch request when the component did monunt \n   \n    componentDidMount(){\n       \n        fetch(url)\n        .then(resp => resp.json())\n        .then(klasses => {\n            // console.log(klasses)\n            // normally in react this.setState{ classes }\n            // but now we don't want our component to handle state\n            // must be invoked\n            this.props.fetchedKlasses(klasses)\n        } )\n    }\n    render() {\n        return (\n            <div>\n\n\n                <h1> My Clasess</h1>\n                {/* <div className=\"ui  three stackable centered cards\">\n                    {this.props.fetchedKlasses.map(k =>  \n                        <ClassCard key={k.id} klass = {k} /> )}\n                     \n                </div> */}\n                \n            </div>\n        )\n    }\n}\n\n// i want to get the sate from star and snik it as props\n// End product \n// Solution use connect (mapstatToProps) to map the state to props\n// mapstatToProps is a function that accepts the state from the store and return \n//    props with key and value \n// export the enhanced HomePage \n\n\n// on Load of this page, dispatch an action that is FETCHED_KLASSES\nconst mapDispatchToProps = (dispatch) => {\n    return{\n\n        // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n      fetchedKlasses: (klasses) => { dispatch ( {type: \"FETCHED_KLASSES\", payload: klasses})}\n    }\n\n}\n\n// accepts state and returns an object that props map to the state\nconst mapStateToProps = ( state )=> {\n    return {\n        klasses: state.klasses\n    }\n \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage) \n\n//Problem : if we have the fecth call on this component, our app fetchs whenever the mainpage is \n//           clicked. \n// Goal : we want to fetch only once\n \n"]},"metadata":{},"sourceType":"module"}