{"ast":null,"code":"var _jsxFileName = \"/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Containers/HomePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from \"react-dom\";\n\nclass HomePage extends Component {\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \" My Clasess\"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} // i want to get the sate from star and snik it as props\n// End product \n// Solution use connect (mapstatToProps) to map the state to props\n// mapstatToProps is a function that accepts the state from the store and return \n//    props with key and value \n// export the enhanced HomePage \n// accepts state and returns an object that props map to the state\n\n\nconst mapStateToProps = state => {\n  console.log(\"Statie is \", state);\n  return {\n    fetchedKlasses: state.klasses\n  };\n};\n\nexport default connect(mapStateToProps)(HomePage); // Problem: getting the all klasses from api and dispatching it to store\n//           so that inital state has all klasses at the beginig\n// Solution: Request GET Fetch request when the component did monunt \n//Problem : if we have the fecth call on this component, when switching route this component gets\n//          mount and unmont each  time mainpage is clicked hence fetching that many times \n// Goal : we want to fetch only once\n// Solution: Make the fetch call in App where only one fetch is required\n// Problem: Every Component shoud be as dumb as possible and just handle props\n//          All state changes should happen in redux (store)\n// Solution: Redux thunk\n//         fetch inside action","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Containers/HomePage.js"],"names":["React","Component","connect","Switch","Route","HomePage","render","console","log","props","mapStateToProps","state","fetchedKlasses","klasses"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,WAA5B;;AAGC,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAG9BK,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAE,KAAF;AACI,MAAA,IAAI,EAAE,EADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAqBH;;AA1B6B,C,CA6BlC;AACA;AACA;AACA;AACA;AACA;AAKA;;;AACA,MAAMC,eAAe,GAAKC,KAAF,IAAY;AAChCJ,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2BG,KAA3B;AACA,SAAO;AAEHC,IAAAA,cAAc,EAAED,KAAK,CAACE;AAFnB,GAAP;AAKH,CAPD;;AASA,eAAeX,OAAO,CAACQ,eAAD,CAAP,CAAyBL,QAAzB,CAAf,C,CAGI;AACA;AAEA;AAIJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\n\nimport {connect} from \"react-redux\"\nimport {Switch, Route} from \"react-dom\"\n\n\n class HomePage extends Component {\n\n\n    render() {\n        console.log(this.props)\n        return (\n            <div>\n\n\n                <h1> My Clasess</h1>\n                <Switch>\n                    < Route \n                        path =\"\"\n                        >\n\n                    </Route>\n\n\n                </Switch>\n                <div>\n                    {/* {this.props.fetchedKlasses} */}\n                     \n                </div> \n                \n            </div>\n        )\n    }\n}\n\n// i want to get the sate from star and snik it as props\n// End product \n// Solution use connect (mapstatToProps) to map the state to props\n// mapstatToProps is a function that accepts the state from the store and return \n//    props with key and value \n// export the enhanced HomePage \n\n\n\n\n// accepts state and returns an object that props map to the state\nconst mapStateToProps = ( state )=> {\n    console.log( \"Statie is \", state)\n    return {\n\n        fetchedKlasses: state.klasses\n    }\n \n}\n\nexport default connect(mapStateToProps)(HomePage) \n\n\n    // Problem: getting the all klasses from api and dispatching it to store\n    //           so that inital state has all klasses at the beginig\n    \n    // Solution: Request GET Fetch request when the component did monunt \n   \n  \n\n//Problem : if we have the fecth call on this component, when switching route this component gets\n//          mount and unmont each  time mainpage is clicked hence fetching that many times \n// Goal : we want to fetch only once\n// Solution: Make the fetch call in App where only one fetch is required\n\n// Problem: Every Component shoud be as dumb as possible and just handle props\n//          All state changes should happen in redux (store)\n// Solution: Redux thunk\n//         fetch inside action\n"]},"metadata":{},"sourceType":"module"}