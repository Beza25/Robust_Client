{"ast":null,"code":"// import classes from '../classes_data.json'\nimport { combineReducers } from \"redux\";\nimport { Switch } from \"react-router-dom\";\nlet intialState = {\n  klasses: [],\n  currentUser: null\n};\n\nconst klassesReducer = (oldState = intialState.klasses, action) => {\n  // console.log(\"in reducer\", oldState)\n  // in the case of FECTHED_KLASSES, return action.payload\n  switch (action.type) {\n    case \"FETCHED_KLASSES\":\n      return action.payload;\n\n    default:\n      return oldState;\n  }\n};\n\nconst userReducer = (oldState = intialState.currentUser, action) => {\n  // \"CURENTUSER\"\n  return oldState;\n}; // make your reducer to return an object by using combinned reducer \n\n\nconst rootReducer = combineReducers({\n  klasses: klassesReducer,\n  currentUser: userReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Redux/reducer.js"],"names":["combineReducers","Switch","intialState","klasses","currentUser","klassesReducer","oldState","action","type","payload","userReducer","rootReducer"],"mappings":"AAAA;AAEA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,IAAIC,WAAW,GAAG;AACdC,EAAAA,OAAO,EAAE,EADK;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAlB;;AAMA,MAAMC,cAAc,GAAG,CAACC,QAAQ,GAAGJ,WAAW,CAACC,OAAxB,EAAiCI,MAAjC,KAA4C;AAC/D;AACA;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,aAAOD,MAAM,CAACE,OAAd;;AACJ;AACI,aAAOH,QAAP;AAJR;AAMH,CATD;;AAUA,MAAMI,WAAW,GAAG,CAACJ,QAAQ,GAAGJ,WAAW,CAACE,WAAxB,EAAqCG,MAArC,KAA+C;AAE/D;AACA,SAAOD,QAAP;AAGH,CAND,C,CAUA;;;AACA,MAAMK,WAAW,GAAGX,eAAe,CAAC;AAChCG,EAAAA,OAAO,EAAEE,cADuB;AAEhCD,EAAAA,WAAW,EAAEM;AAFmB,CAAD,CAAnC;AAQA,eAAeC,WAAf","sourcesContent":["// import classes from '../classes_data.json'\n\nimport { combineReducers } from \"redux\";\nimport { Switch } from \"react-router-dom\";\n\nlet intialState = {\n    klasses: [],\n    currentUser: null\n}\n\n\nconst klassesReducer = (oldState = intialState.klasses, action) => {\n    // console.log(\"in reducer\", oldState)\n    // in the case of FECTHED_KLASSES, return action.payload\n    switch (action.type){\n        case \"FETCHED_KLASSES\":\n            return action.payload\n        default:\n            return oldState\n    }\n}\nconst userReducer = (oldState = intialState.currentUser, action) =>{\n\n    // \"CURENTUSER\"\n    return oldState\n\n\n}\n\n\n\n// make your reducer to return an object by using combinned reducer \nconst rootReducer = combineReducers({\n    klasses: klassesReducer,\n    currentUser: userReducer\n   \n   \n})\n\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}