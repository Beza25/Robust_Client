{"ast":null,"code":"var _jsxFileName = \"/Users/emusha/FlatIron/code/project_5/Robust_Client/src/App.js\";\nimport React, { Component } from 'react'; // import swal from '@sweetalert/with-react';\n\nimport swal from 'sweetalert';\nimport { Link } from \"react-router-dom\";\nimport './App.css';\nimport NavBar from './Containers/NavBar';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from './Containers/HomePage';\nimport LoginForm from './Containers/LoginForm';\nimport About from './Containers/About';\nimport { connect } from 'react-redux';\nimport { fetchingKlasses } from './Redux/actions';\nimport MainPage2 from \"./Containers/MainPage2\"; // import ClassCard from './Components/ClassCard'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateCurrentUser = currentUser => {\n      this.setState({\n        currentUser: currentUser,\n        userKlasses: currentUser.klasses,\n        userAssignments: currentUser.assignments\n      });\n      console.log(\"current user \", this.state.currentUser);\n      console.log(\"current user \", this.state.userAssignments);\n    };\n\n    this.createAssign = newAssign => {\n      // console.log(\"New Assing: \", newAssign)\n      swal({\n        title: \"Created Successfully!\",\n        icon: \"success\",\n        button: \"Continue!\"\n      });\n      let arr = [newAssign, ...this.state.userAssignments];\n      this.setState({\n        userAssignments: arr\n      });\n    };\n\n    this.editAssigns = updatedAssign => {\n      swal({\n        title: \"Edited Successfully!\",\n        text: \"You clicked the button!\",\n        icon: \"success\",\n        button: \"Continue!\"\n      });\n      let assignments = this.state.userAssignments;\n      assignments.forEach(a => {\n        if (a.id === updatedAssign.id) {\n          a.title = updatedAssign.title;\n          a.klass_id = updatedAssign.klass_id;\n          a.content = updatedAssign.content;\n          a.deadline = updatedAssign.deadline;\n          a.updated_at = updatedAssign.updated_at;\n        }\n      });\n      this.setState({\n        userAssignments: assignments\n      });\n    };\n\n    this.handleDelete = id => {\n      swal({\n        title: \"Deleted Successfully!\",\n        text: \"You clicked the button!\",\n        icon: \"success\",\n        button: \"Continue!\"\n      });\n      fetch(`http://localhost:3001/assignments/${id}`, {\n        method: \"DELETE\"\n      });\n      const filtered = this.state.userAssignments.filter(a => a.id !== id);\n      this.setState({\n        userAssignments: filtered\n      });\n    };\n\n    this.state = {\n      userAssignments: [],\n      userKlasses: [],\n      grades: [],\n      currentUser: null //  currentUser : {id: 2, user: \"teacher\", first_name: \"Carla\", last_name: null, username: \"carla\",img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CVUP08-d274...\"}\n      // currentUser: {id: 4, user: \"student\", first_name: \"Alex\", last_name: null, username: \"alex\", level: 4, img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CW4UJU-58c5...\"}\n\n    };\n  }\n\n  render() {\n    // console.log(\"userKlasses: \", this.state.userKlasses)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(LoginForm, {\n        updateCurrentUser: this.updateCurrentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 56\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), this.state.currentUser ? /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/classes\",\n      render: () => /*#__PURE__*/React.createElement(HomePage, {\n        klasses: this.state.userKlasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 58\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), this.state.currentUser ? /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/classes/:id\",\n      render: props => {\n        let id = props.match.params.id; // let klass = this.props.klasses.find(k => k.id == i)      \n\n        let klasses = this.state.userKlasses;\n        let klass;\n        {\n          klasses.length > 0 ? klass = klasses.find(k => k.id == id) : klass = null;\n        } // debugger\n        //let klass = {id: 1, name: \"Mirtle\", level:2, teacher_id: 1}\n        // return <MainPage klass = {klass} \n        //               createAssign= {this.createAssign}\n        //                assignments={this.state.userAssignments}\n        //                editAssigns = {this.editAssigns}\n        //                handleDelete ={this.handleDelete}\n        //                currentUser = {this.state.currentUser} \n        //                />\n\n        return klass ? /*#__PURE__*/React.createElement(MainPage2, {\n          klass: klass,\n          createAssign: this.createAssign,\n          assignments: this.state.userAssignments,\n          editAssigns: this.editAssigns,\n          handleDelete: this.handleDelete,\n          currentUser: this.state.currentUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 44\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ui blue active inverted dimmer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ui text loader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }\n        }, \"Loading\")); // \"here\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, \" Page Not Found 404\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(\"App's state: \", state.klasses)\n  return {\n    klasses: state.klasses,\n    currentUser: state.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n    // don't forget to invoke it\n    fetchingKlasses: () => {\n      dispatch(fetchingKlasses());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // if(currentUser.user === \"teacher\"){\n//   fetch(`http://localhost:3001/teachers/${currentUser.id}`)\n// .then(resp => resp.json())\n// .then(data => {\n//   // console.log(\"teacher data: \", data)\n//   this.setState({userAssignments: data.assignments})\n// })\n// }else{\n//   fetch(`http://localhost:3001/students/${currentUser.id}`)\n//   .then(resp => resp.json())\n//   .then(data => {\n//     // console.log(\"student data: \", data)\n//     this.setState({userAssignments: data.assignments})\n// })\n//  }","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/App.js"],"names":["React","Component","swal","Link","NavBar","BrowserRouter","Route","Switch","Redirect","HomePage","LoginForm","About","connect","fetchingKlasses","MainPage2","App","constructor","updateCurrentUser","currentUser","setState","userKlasses","klasses","userAssignments","assignments","console","log","state","createAssign","newAssign","title","icon","button","arr","editAssigns","updatedAssign","text","forEach","a","id","klass_id","content","deadline","updated_at","handleDelete","fetch","method","filtered","filter","grades","render","props","match","params","klass","length","find","k","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import swal from '@sweetalert/with-react';\nimport swal from 'sweetalert';\n\nimport {Link} from \"react-router-dom\"\n\nimport './App.css';\nimport  NavBar from './Containers/NavBar'\nimport { BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport HomePage from './Containers/HomePage';\nimport LoginForm from './Containers/LoginForm';\nimport About from './Containers/About';\nimport {connect} from 'react-redux';\nimport {fetchingKlasses} from './Redux/actions';\nimport MainPage2 from \"./Containers/MainPage2\"\n// import ClassCard from './Components/ClassCard'\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state ={\n      userAssignments: [],\n      userKlasses: [],\n      grades: [],\n      currentUser:  null \n\n      //  currentUser : {id: 2, user: \"teacher\", first_name: \"Carla\", last_name: null, username: \"carla\",img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CVUP08-d274...\"}\n      \n      // currentUser: {id: 4, user: \"student\", first_name: \"Alex\", last_name: null, username: \"alex\", level: 4, img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CW4UJU-58c5...\"}\n    }\n  }\n\n  updateCurrentUser =(currentUser) =>{\n \n    this.setState({currentUser: currentUser,\n                    userKlasses: currentUser.klasses,\n                    userAssignments: currentUser.assignments\n\n                \n    })\n  \n    console.log(\"current user \" , this.state.currentUser)\n    console.log(\"current user \" , this.state.userAssignments)\n\n\n\n  }\n\n  // componentDidMount(){ \n  //   // this.props.fetchingKlasses()\n  //  if (this.state.currentUser){\n  //     // console.log(\"current User: \",this.props.currentUser)\n  //   const currentUser = this.state.currentUser \n  //   let url = `http://localhost:3001/${currentUser.user}s/${currentUser.id}`\n\n  //   fetch(url)\n  //   .then(resp => resp.json())\n  //   .then(data => {\n  //     console.log( \"fetched data\", data)\n  //     this.setState({userAssignments: data.assignments })\n  //     this.setState({userKlasses: data.klasses} )\n      \n\n  //     this.setState({grades: data.klasses.student_assignments})\n     \n       \n  //     // console.log(\"data: \", data.klasses)\n   \n    \n  //   })\n\n  //  }\n   \n\n    // fetch(`http://localhost:3001/)\n   \n   \n// }\n\ncreateAssign =(newAssign) => {\n  // console.log(\"New Assing: \", newAssign)\n  \n  swal({\n    title: \"Created Successfully!\",\n   \n    icon: \"success\",\n    button: \"Continue!\",\n  });\n \n  let  arr=  [newAssign, ...this.state.userAssignments]\n \n  this.setState({userAssignments: arr }) \n}\n\neditAssigns = ( updatedAssign) => {\n  swal({\n    title: \"Edited Successfully!\",\n    text: \"You clicked the button!\",\n    icon: \"success\",\n    button: \"Continue!\",\n  });\n\n  let assignments = this.state.userAssignments \n assignments.forEach(a => { if (a.id === updatedAssign.id){\n                                a.title = updatedAssign.title\n                                a.klass_id = updatedAssign.klass_id\n                                a.content = updatedAssign.content\n                                a.deadline = updatedAssign.deadline\n                                a.updated_at = updatedAssign.updated_at\n                          }\n                          })\n    this.setState({userAssignments: assignments })\n}\n\nhandleDelete= (id) => {\n  swal({\n    title: \"Deleted Successfully!\",\n    text: \"You clicked the button!\",\n    icon: \"success\",\n    button: \"Continue!\",\n  });\n  fetch(`http://localhost:3001/assignments/${id}`,{ method: \"DELETE\" })\n const filtered =  this.state.userAssignments.filter(a => a.id !== id)\n  this.setState({userAssignments: filtered})\n  \n}\n\nrender(){\n  // console.log(\"userKlasses: \", this.state.userKlasses)\n\n  return (\n    \n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar/>\n        <Switch>\n\n        <Route exact path = \"/\" component = {About}/>\n        \n          <Route exact path = \"/login\" render= {() => (<LoginForm updateCurrentUser= {this.updateCurrentUser}/>)}/>\n          \n          {this.state.currentUser ?\n          <Route exact path = \"/classes\" render= {() => (<HomePage   klasses={this.state.userKlasses}  />)}/>:\n          <Redirect to=\"/\"/> }\n    \n          {this.state.currentUser  ?\n          <Route exact path = \"/classes/:id\" render= {(props) => \n            {\n              let id = props.match.params.id\n              // let klass = this.props.klasses.find(k => k.id == i)      \n              let klasses = this.state.userKlasses\n          \n               let klass\n               {klasses.length > 0 ? \n               klass = klasses.find(k => k.id == id)\n                : klass = null\n              }\n             \n         \n              // debugger\n             //let klass = {id: 1, name: \"Mirtle\", level:2, teacher_id: 1}\n              // return <MainPage klass = {klass} \n              //               createAssign= {this.createAssign}\n              //                assignments={this.state.userAssignments}\n              //                editAssigns = {this.editAssigns}\n              //                handleDelete ={this.handleDelete}\n              //                currentUser = {this.state.currentUser} \n                             \n              //                />\n                             return klass? <MainPage2 klass = {klass} \n                             createAssign= {this.createAssign}\n                              assignments={this.state.userAssignments}\n                              editAssigns = {this.editAssigns}\n                              handleDelete ={this.handleDelete}\n                              currentUser = {this.state.currentUser}  \n                              \n                              />: \n                              <div className=\"ui blue active inverted dimmer\">\n                                <div className=\"ui text loader\">Loading</div>\n                              </div>\n                              // \"here\"\n                            \n\n              }\n         \n           }/>\n       :<Redirect to=\"/\"/> }\n\n        \n          <Route render= {() => <div > Page Not Found 404</div>}/>\n          \n        </Switch>    \n      \n      </BrowserRouter> \n     \n   \n      \n    \n    </div>\n  );\n\n}\n\n  \n}\n\nconst mapStateToProps = (state) => {\n  // console.log(\"App's state: \", state.klasses)\n  return{\n    \n       klasses: state.klasses,\n       currentUser: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n\n      // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n      // don't forget to invoke it\n      fetchingKlasses: () => { dispatch ( fetchingKlasses())}\n  }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n  \n\n\n\n\n// if(currentUser.user === \"teacher\"){\n    //   fetch(`http://localhost:3001/teachers/${currentUser.id}`)\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   // console.log(\"teacher data: \", data)\n      \n    //   this.setState({userAssignments: data.assignments})\n    // })\n  \n    // }else{\n    //   fetch(`http://localhost:3001/students/${currentUser.id}`)\n    //   .then(resp => resp.json())\n    //   .then(data => {\n    //     // console.log(\"student data: \", data)\n    //     this.setState({userAssignments: data.assignments})\n        \n      // })\n  //  } "]},"metadata":{},"sourceType":"module"}