{"ast":null,"code":"var _jsxFileName = \"/Users/emusha/FlatIron/code/project_5/Robust_Client/src/App.js\";\nimport React, { Component } from 'react'; // import swal from '@sweetalert/with-react';\n\nimport swal from 'sweetalert'; // import logo from './logo.svg';\n// , Redirect\n\nimport './App.css';\nimport NavBar from './Containers/NavBar';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from './Containers/HomePage';\nimport LoginForm from './Containers/LoginForm';\nimport MainPage from './Containers/MainPage';\nimport About from './Containers/About';\nimport { connect } from 'react-redux';\nimport { fetchingKlasses } from './Redux/actions'; // import ClassCard from './Components/ClassCard'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.createAssign = newAssign => {\n      // console.log(\"New Assing: \", newAssign)\n      swal({\n        title: \"Created Successfully!\",\n        text: \"You clicked the button!\",\n        icon: \"success\",\n        button: \"Continue!\"\n      });\n      let arr = [...this.state.userAssignments, newAssign];\n      this.setState({\n        userAssignments: arr\n      });\n    };\n\n    this.editAssigns = updatedAssign => {\n      let assignments = this.state.userAssignments;\n      assignments.forEach(a => {\n        if (a.id === updatedAssign.id) {\n          a.title = updatedAssign.title;\n          a.klass_id = updatedAssign.klass_id;\n          a.content = updatedAssign.content;\n          a.deadline = updatedAssign.deadline;\n          a.updated_at = updatedAssign.updated_at;\n        }\n      });\n      this.setState({\n        userAssignments: assignments\n      });\n    };\n\n    this.handleDelete = id => {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this assignment!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          swal(\"Poof! Your assignment has been deleted!\", {\n            icon: \"success\"\n          });\n        } else {\n          swal(\"Your imaginary file is safe!\");\n        }\n      });\n      fetch(`http://localhost:3001/assignments/${id}`, {\n        method: \"DELETE\"\n      });\n      const filtered = this.state.userAssignments.filter(a => a.id !== id);\n      this.setState({\n        userAssignments: filtered\n      });\n    };\n\n    this.state = {\n      userAssignments: [],\n      userKlasses: [],\n      currentUser: {\n        id: 2,\n        first_name: \"Carla\",\n        last_name: null,\n        username: \"carla\",\n        password_digest: null,\n        img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CVUP08-d274...\",\n        user: \"teacher\",\n        created_at: \"2020-06-09 03:01:25\",\n        updated_at: \"2020-06-09 03:01:25\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchingKlasses();\n    const currentUser = this.state.currentUser;\n    let url = `http://localhost:3001/${currentUser.user}s/${currentUser.id}`;\n    fetch(url).then(resp => resp.json()).then(data => {\n      this.setState({\n        userAssignments: data.assignments\n      });\n      this.setState({\n        userKlasses: data.klasses\n      });\n    });\n  }\n\n  render() {\n    console.log(\"userKlasses: \", this.state.userKlasses);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(LoginForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 56\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }), this.state.currentUser ? /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/homepage\",\n      render: () => /*#__PURE__*/React.createElement(HomePage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 59\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), this.state.currentUser ? /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/classes/:id\",\n      render: props => {\n        let id = props.match.params.id;\n        let klass = this.props.klasses.find(k => k.id == id); // let klass = this.state.userKlasses.filter(k => k.id == id)\n\n        return /*#__PURE__*/React.createElement(MainPage, {\n          klass: klass,\n          createAssign: this.createAssign,\n          assignments: this.state.userAssignments,\n          editAssigns: this.editAssigns,\n          handleDelete: this.handleDelete,\n          currentUser: this.state.currentUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 22\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 33\n        }\n      }, \" Page Not Found 404\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(\"App's state: \", state.klasses)\n  return {\n    klasses: state.klasses\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n    // don't forget to invoke it\n    fetchingKlasses: () => {\n      dispatch(fetchingKlasses());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // if(currentUser.user === \"teacher\"){\n//   fetch(`http://localhost:3001/teachers/${currentUser.id}`)\n// .then(resp => resp.json())\n// .then(data => {\n//   // console.log(\"teacher data: \", data)\n//   this.setState({userAssignments: data.assignments})\n// })\n// }else{\n//   fetch(`http://localhost:3001/students/${currentUser.id}`)\n//   .then(resp => resp.json())\n//   .then(data => {\n//     // console.log(\"student data: \", data)\n//     this.setState({userAssignments: data.assignments})\n// })\n//  }","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/App.js"],"names":["React","Component","swal","NavBar","BrowserRouter","Route","Switch","Redirect","HomePage","LoginForm","MainPage","About","connect","fetchingKlasses","App","constructor","createAssign","newAssign","title","text","icon","button","arr","state","userAssignments","setState","editAssigns","updatedAssign","assignments","forEach","a","id","klass_id","content","deadline","updated_at","handleDelete","buttons","dangerMode","then","willDelete","fetch","method","filtered","filter","userKlasses","currentUser","first_name","last_name","username","password_digest","img","user","created_at","componentDidMount","props","url","resp","json","data","klasses","render","console","log","match","params","klass","find","k","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import swal from '@sweetalert/with-react';\nimport swal from 'sweetalert';\n\n// import logo from './logo.svg';\n// , Redirect\nimport './App.css';\nimport  NavBar from './Containers/NavBar'\nimport { BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport HomePage from './Containers/HomePage';\nimport LoginForm from './Containers/LoginForm';\nimport MainPage from './Containers/MainPage';\nimport About from './Containers/About';\nimport {connect} from 'react-redux';\nimport {fetchingKlasses} from './Redux/actions';\n// import ClassCard from './Components/ClassCard'\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state ={\n      userAssignments: [],\n      userKlasses: [],\n      currentUser : {\n        id: 2,\n        first_name: \"Carla\", \n        last_name: null,\n         username: \"carla\",\n          password_digest: null,\n           img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CVUP08-d274...\",\n           user: \"teacher\",\n            created_at: \"2020-06-09 03:01:25\", updated_at: \"2020-06-09 03:01:25\"\n      }\n    }\n  }\n\n  componentDidMount(){ \n    this.props.fetchingKlasses()\n    const currentUser = this.state.currentUser \n    let url = `http://localhost:3001/${currentUser.user}s/${currentUser.id}`\n\n    fetch(url)\n    .then(resp => resp.json())\n    .then(data => {\n      this.setState({userAssignments: data.assignments })\n      this.setState({userKlasses: data.klasses})\n    \n    })\n}\n\ncreateAssign =(newAssign) => {\n  // console.log(\"New Assing: \", newAssign)\n  \n  swal({\n    title: \"Created Successfully!\",\n    text: \"You clicked the button!\",\n    icon: \"success\",\n    button: \"Continue!\",\n  });\n \n  let  arr=  [...this.state.userAssignments, newAssign]\n \n  this.setState({userAssignments: arr }) \n}\n\neditAssigns = ( updatedAssign) => {\n\n  let assignments = this.state.userAssignments \n assignments.forEach(a => { if (a.id === updatedAssign.id){\n                                a.title = updatedAssign.title\n                                a.klass_id = updatedAssign.klass_id\n                                a.content = updatedAssign.content\n                                a.deadline = updatedAssign.deadline\n                                a.updated_at = updatedAssign.updated_at\n                          }\n                          })\n    this.setState({userAssignments: assignments })\n}\n\nhandleDelete= (id) => {\n  swal({\n    title: \"Are you sure?\",\n    text: \"Once deleted, you will not be able to recover this assignment!\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true,\n  })\n  .then((willDelete) => {\n    if (willDelete) {\n      swal(\"Poof! Your assignment has been deleted!\", {\n        icon: \"success\",\n      });\n    } else {\n      swal(\"Your imaginary file is safe!\");\n    }\n  });\n  fetch(`http://localhost:3001/assignments/${id}`,{ method: \"DELETE\" })\n const filtered =  this.state.userAssignments.filter(a => a.id !== id)\n  this.setState({userAssignments: filtered})\n  \n}\n\nrender(){\n  console.log(\"userKlasses: \", this.state.userKlasses)\n  return (\n    \n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar/>\n        <Switch>\n\n        <Route exact path = \"/\" component = {About}/>\n        \n          <Route exact path = \"/login\" render= {() => (<LoginForm/>)}/>\n          \n          {this.state.currentUser ?\n          <Route exact path = \"/homepage\" render= {() => (<HomePage/>)}/>:\n          <Redirect to=\"/\"/> }\n    \n          {this.state.currentUser ?\n          <Route exact path = \"/classes/:id\" render= {(props) => \n            {\n              let id = props.match.params.id\n              let klass = this.props.klasses.find(k => k.id == id)\n              // let klass = this.state.userKlasses.filter(k => k.id == id)\n             \n              return <MainPage klass = {klass} \n                            createAssign= {this.createAssign}\n                             assignments={this.state.userAssignments}\n                             editAssigns = {this.editAssigns}\n                             handleDelete ={this.handleDelete}\n                             currentUser = {this.state.currentUser} \n                             \n                             />\n\n            }\n           }/>\n       :<Redirect to=\"/\"/> }\n        \n          <Route render= {() => <div > Page Not Found 404</div>}/>\n          \n        </Switch>    \n      \n      </BrowserRouter> \n     \n   \n      \n    \n    </div>\n  );\n\n}\n\n  \n}\n\nconst mapStateToProps = (state) => {\n  // console.log(\"App's state: \", state.klasses)\n  return{\n    \n       klasses: state.klasses\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n\n      // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n      // don't forget to invoke it\n      fetchingKlasses: () => { dispatch ( fetchingKlasses())}\n  }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n  \n\n\n\n\n// if(currentUser.user === \"teacher\"){\n    //   fetch(`http://localhost:3001/teachers/${currentUser.id}`)\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   // console.log(\"teacher data: \", data)\n      \n    //   this.setState({userAssignments: data.assignments})\n    // })\n  \n    // }else{\n    //   fetch(`http://localhost:3001/students/${currentUser.id}`)\n    //   .then(resp => resp.json())\n    //   .then(data => {\n    //     // console.log(\"student data: \", data)\n    //     this.setState({userAssignments: data.assignments})\n        \n      // })\n  //  } "]},"metadata":{},"sourceType":"module"}