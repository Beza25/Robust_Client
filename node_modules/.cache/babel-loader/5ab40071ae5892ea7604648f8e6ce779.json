{"ast":null,"code":"var _jsxFileName = \"/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Components/CreateAssing.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class CreateAssign extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleDate = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.getMonthFromString = mon => {\n      return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1;\n    };\n\n    this.SubmitAssign = e => {\n      // e.preventDefault()\n      let date = this.state.startDate.toString().split(' ').splice(1, 4);\n      let month = this.getMonthFromString(date[0]);\n      console.log(this.props.klass.id);\n      const assign = {\n        klassId: this.props.klass.id,\n        title: this.state.title,\n        content: this.state.assign,\n        deadline: [month, date[1], date[2]]\n      }; // console.log(\"New Asss\", assign)\n\n      fetch(\"http://localhost:3001/assignments\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(assign)\n      }).then(resp => resp.json()).then(newAssign => console.log());\n      this.props.createAssign(newAssign); //   this.props.displayAssigns()\n    };\n\n    this.state = {\n      startDate: new Date(),\n      title: \"\",\n      assign: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      size: \"large\",\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        className: \"ui green button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 42\n        }\n      }, \"Create New Dish +\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Create New Assignment\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, \"Due Date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: date => this.handleDate(date),\n      minDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, \"Assignemt\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"content\",\n      onChange: this.handleChange,\n      value: this.state.assign,\n      name: \"assign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Components/CreateAssing.js"],"names":["React","Component","Modal","Button","DatePicker","CreateAssign","constructor","handleChange","e","setState","target","name","value","handleDate","date","startDate","getMonthFromString","mon","Date","parse","getMonth","SubmitAssign","state","toString","split","splice","month","console","log","props","klass","id","assign","klassId","title","content","deadline","fetch","method","headers","body","JSON","stringify","then","resp","json","newAssign","createAssign","render","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Button } from 'semantic-ui-react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nexport default class CreateAssign extends Component {\n    constructor(){\n        super()\n        this.state={\n            startDate: new Date(),\n            title: \"\",\n            assign: \"\"\n\n        }\n    }\n\n    handleChange = (e) =>{\n        this.setState( {[e.target.name]:  e.target.value } )\n    }\n    handleDate = date => {\n        this.setState ({startDate: date})\n\n    }\n\ngetMonthFromString = (mon) => {\n        return new Date(Date.parse(mon +\" 1, 2012\")).getMonth()+1\n     }\n\n    SubmitAssign = (e) => {\n        // e.preventDefault()\n        let date = this.state.startDate.toString().split(' ').splice(1, 4)\n        let month = this.getMonthFromString(date[0])\n\n        console.log(this.props.klass.id)\n        \n       const assign= { \n           klassId: this.props.klass.id,\n           title: this.state.title,\n           content: this.state.assign,\n           deadline: [month,date[1],date[2]]\n        }\n        // console.log(\"New Asss\", assign)\n        fetch(\"http://localhost:3001/assignments\",{\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify(assign)\n        }).then(resp => resp.json())\n        .then(newAssign => console.log() )\n        this.props.createAssign(newAssign)\n       \n        \n    //   this.props.displayAssigns()\n    }\n    render() {\n        return (\n           \n            <Modal size=\"large\" trigger={<Button className=\"ui green button\" >Create New Dish +</Button>}>\n                <Modal.Header>Create New Assignment</Modal.Header>\n                    <Modal.Content >\n                       <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                            <div className=\"field\">\n                                <label>Title</label>\n                                <input type=\"text\"  placeholder=\"title\"\n                                        name= \"title\"\n                                        value = {this.state.title}\n                                        onChange={this.handleChange}\n                          />\n                            </div>\n                            <div className=\"field\">\n                                <label>Due Date:</label>\n                                <DatePicker \n                                selected={this.state.startDate}\n                                onChange={(date ) => this.handleDate(date)}\n                    \n                                minDate={new Date()}    \n                                />\n                            </div>\n\n                            <div className=\"field\">\n                                <label>Assignemt</label>\n                                <textarea type=\"text\"  placeholder=\"content\"\n                                onChange= {this.handleChange}\n                                value = {this.state.assign}\n                                name = \"assign\"\n                                ></textarea>\n                            </div>\n                \n                            <button className=\"ui button\" type=\"submit\">Submit</button>\n                        </form>\n                   </Modal.Content>\n            </Modal>\n          \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}