{"ast":null,"code":"var _jsxFileName = \"/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Containers/HomePage.js\";\nimport React, { Component } from 'react';\nimport ClassCard from \"../Components/ClassCard\";\nimport { connect } from \"react-redux\";\n\nclass HomePage extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \" My Clasess\"));\n  }\n\n} // i want to get the sate from star and snik it as props\n// End product \n// Solution use connect (mapstatToProps) to map the state to props\n// mapstatToProps is a function that accepts the state from the store and return \n//    props with key and value \n// export the enhanced HomePage \n// accepts state and returns an object that props map to the state\n\n\nconst mapStateToProps = state => {\n  return {\n    klasses: state.klasses\n  };\n};\n\nexport default connect(mapStateToProps)(HomePage); // Problem: getting the all klasses from api and dispatching it to store\n//           so that inital state has all klasses at the beginig\n// Solution: Request GET Fetch request when the component did monunt \n//Problem : if we have the fecth call on this component, when switching route this component gets\n//          mount and unmont each  time mainpage is clicked hence fetching that many times \n// Goal : we want to fetch only once\n// Solution: Make the fetch call in App where only one fetch is required\n// Problem: Every Component shoud be as dumb as possible and just handle props\n//          All state changes should happen in redux (store)\n// Solution: Redux thunk\n//         fetch inside action","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/Containers/HomePage.js"],"names":["React","Component","ClassCard","connect","HomePage","render","mapStateToProps","state","klasses"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGC,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAG9BI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ;AAaH;;AAjB6B,C,CAoBlC;AACA;AACA;AACA;AACA;AACA;AAKA;;;AACA,MAAMC,eAAe,GAAKC,KAAF,IAAY;AAChC,SAAO;AAEHC,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,GAAP;AAKH,CAND;;AAQA,eAAeL,OAAO,CAACG,eAAD,CAAP,CAAyBF,QAAzB,CAAf,C,CAGI;AACA;AAEA;AAIJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport ClassCard from \"../Components/ClassCard\"\nimport {connect} from \"react-redux\"\n\n\n class HomePage extends Component {\n\n\n    render() {\n        return (\n            <div>\n\n\n                <h1> My Clasess</h1>\n                {/* <div className=\"ui  three stackable centered cards\">\n                    {this.props.fetchedKlasses.map(k =>  \n                        <ClassCard key={k.id} klass = {k} /> )}\n                     \n                </div> */}\n                \n            </div>\n        )\n    }\n}\n\n// i want to get the sate from star and snik it as props\n// End product \n// Solution use connect (mapstatToProps) to map the state to props\n// mapstatToProps is a function that accepts the state from the store and return \n//    props with key and value \n// export the enhanced HomePage \n\n\n\n\n// accepts state and returns an object that props map to the state\nconst mapStateToProps = ( state )=> {\n    return {\n        \n        klasses: state.klasses\n    }\n \n}\n\nexport default connect(mapStateToProps)(HomePage) \n\n\n    // Problem: getting the all klasses from api and dispatching it to store\n    //           so that inital state has all klasses at the beginig\n    \n    // Solution: Request GET Fetch request when the component did monunt \n   \n  \n\n//Problem : if we have the fecth call on this component, when switching route this component gets\n//          mount and unmont each  time mainpage is clicked hence fetching that many times \n// Goal : we want to fetch only once\n// Solution: Make the fetch call in App where only one fetch is required\n\n// Problem: Every Component shoud be as dumb as possible and just handle props\n//          All state changes should happen in redux (store)\n// Solution: Redux thunk\n//         fetch inside action\n"]},"metadata":{},"sourceType":"module"}