{"ast":null,"code":"var _jsxFileName = \"/Users/emusha/FlatIron/code/project_5/Robust_Client/src/App.js\";\nimport React, { Component } from 'react'; // import swal from '@sweetalert/with-react';\n\nimport swal from 'sweetalert';\nimport './App.css';\nimport NavBar from './Containers/NavBar';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from './Containers/HomePage';\nimport LoginForm from './Containers/LoginForm';\nimport About from './Containers/About';\nimport { connect } from 'react-redux';\nimport { fetchingKlasses } from './Redux/actions';\nimport MainPage2 from \"./Containers/MainPage2\"; // import ClassCard from './Components/ClassCard'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateCurrentUser = currentUser => {\n      if (currentUser != null) {\n        this.setState({\n          currentUser: currentUser.user_data,\n          userKlasses: currentUser.klasses,\n          userAssignments: currentUser.assignments\n        });\n      } else {\n        this.setState({\n          currentUser: null\n        });\n      }\n    };\n\n    this.createAssign = newAssign => {\n      // console.log(\"New Assing: \", newAssign)\n      swal({\n        title: \"Created Successfully!\",\n        icon: \"success\",\n        button: \"Continue!\"\n      });\n      let arr = [newAssign, ...this.state.userAssignments];\n      this.setState({\n        userAssignments: arr\n      });\n    };\n\n    this.editAssigns = updatedAssign => {\n      swal({\n        title: \"Edited Successfully!\",\n        text: \"You clicked the button!\",\n        icon: \"success\",\n        button: \"Continue!\"\n      });\n      let assignments = this.state.userAssignments;\n      assignments.forEach(a => {\n        if (a.id === updatedAssign.id) {\n          a.title = updatedAssign.title;\n          a.klass_id = updatedAssign.klass_id;\n          a.content = updatedAssign.content;\n          a.deadline = updatedAssign.deadline;\n          a.updated_at = updatedAssign.updated_at;\n        }\n      });\n      this.setState({\n        userAssignments: assignments\n      });\n    };\n\n    this.handleDelete = id => {\n      swal({\n        title: \"Deleted Successfully!\",\n        text: \"You clicked the button!\",\n        icon: \"success\",\n        button: \"Continue!\"\n      });\n      fetch(`http://localhost:3001/assignments/${id}`, {\n        method: \"DELETE\"\n      });\n      const filtered = this.state.userAssignments.filter(a => a.id !== id);\n      this.setState({\n        userAssignments: filtered\n      });\n    };\n\n    this.handleLogout = () => {\n      // console.log(\"\")\n      localStorage.removeItem(\"token\");\n      this.updateCurrentUser(null);\n    };\n\n    this.state = {\n      userAssignments: [],\n      userKlasses: [],\n      grades: [],\n      currentUser: null //  currentUser : {id: 2, user: \"teacher\", first_name: \"Carla\", last_name: null, username: \"carla\",img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CVUP08-d274...\"}\n      //   // currentUser: {id: 4, user: \"student\", first_name: \"Alex\", last_name: null, username: \"alex\", level: 4, img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CW4UJU-58c5...\"}\n\n    };\n  }\n\n  componentDidMount() {\n    // check if there is a current user in localStorage\n    if (localStorage.getItem(\"token\")) {\n      console.log(\"token found\");\n      fetch(\"http://localhost:3001/decode_token\", {\n        headers: {\n          \"Authenticate\": localStorage.token\n        }\n      }).then(resp => resp.json()).then(data => {\n        console.log(\"data: \", data);\n        this.updateCurrentUser(data);\n      });\n    } else {\n      console.log(\"no token found\");\n    }\n  }\n\n  render() {\n    console.log(\"userKlasses: \", this.state.userKlasses);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      currentUser: this.state.currentUser,\n      handleLogout: this.handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/logout\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => this.state.currentUser === null ? /*#__PURE__*/React.createElement(LoginForm, {\n        updateCurrentUser: this.updateCurrentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/classes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), this.state.currentUser ? /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/classes\",\n      render: () => /*#__PURE__*/React.createElement(HomePage, {\n        klasses: this.state.userKlasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 36\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 36\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 91\n      }\n    }), this.state.currentUser ? /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/classes/:id\",\n      render: props => {\n        let id = props.match.params.id; // let klass = this.props.klasses.find(k => k.id == i)      \n\n        let klasses = this.state.userKlasses;\n        let klass;\n        {\n          klasses.length > 0 ? klass = klasses.find(k => k.id == id) : klass = null;\n        }\n        return klass ? /*#__PURE__*/React.createElement(MainPage2, {\n          klass: klass,\n          createAssign: this.createAssign,\n          assignments: this.state.userAssignments,\n          editAssigns: this.editAssigns,\n          handleDelete: this.handleDelete,\n          currentUser: this.state.currentUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 44\n          }\n        }) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ui blue active inverted dimmer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ui text loader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }\n        }, \"Loading\"));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }, \" Page Not Found 404\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(\"App's state: \", state.klasses)\n  return {\n    klasses: state.klasses,\n    currentUser: state.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n    // don't forget to invoke it\n    fetchingKlasses: () => {\n      dispatch(fetchingKlasses());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // if(currentUser.user === \"teacher\"){\n//   fetch(`http://localhost:3001/teachers/${currentUser.id}`)\n// .then(resp => resp.json())\n// .then(data => {\n//   // console.log(\"teacher data: \", data)\n//   this.setState({userAssignments: data.assignments})\n// })\n// }else{\n//   fetch(`http://localhost:3001/students/${currentUser.id}`)\n//   .then(resp => resp.json())\n//   .then(data => {\n//     // console.log(\"student data: \", data)\n//     this.setState({userAssignments: data.assignments})\n// })\n//  } \n// debugger\n//let klass = {id: 1, name: \"Mirtle\", level:2, teacher_id: 1}\n// return <MainPage klass = {klass} \n//               createAssign= {this.createAssign}\n//                assignments={this.state.userAssignments}\n//                editAssigns = {this.editAssigns}\n//                handleDelete ={this.handleDelete}\n//                currentUser = {this.state.currentUser} \n//                />","map":{"version":3,"sources":["/Users/emusha/FlatIron/code/project_5/Robust_Client/src/App.js"],"names":["React","Component","swal","NavBar","BrowserRouter","Route","Switch","Redirect","HomePage","LoginForm","About","connect","fetchingKlasses","MainPage2","App","constructor","updateCurrentUser","currentUser","setState","user_data","userKlasses","klasses","userAssignments","assignments","createAssign","newAssign","title","icon","button","arr","state","editAssigns","updatedAssign","text","forEach","a","id","klass_id","content","deadline","updated_at","handleDelete","fetch","method","filtered","filter","handleLogout","localStorage","removeItem","grades","componentDidMount","getItem","console","log","headers","token","then","resp","json","data","render","props","match","params","klass","length","find","k","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import swal from '@sweetalert/with-react';\nimport swal from 'sweetalert';\nimport './App.css';\nimport  NavBar from './Containers/NavBar'\nimport { BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport HomePage from './Containers/HomePage';\nimport LoginForm from './Containers/LoginForm';\nimport About from './Containers/About';\nimport {connect} from 'react-redux';\nimport {fetchingKlasses} from './Redux/actions';\nimport MainPage2 from \"./Containers/MainPage2\"\n// import ClassCard from './Components/ClassCard'\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state ={\n      userAssignments: [],\n      userKlasses: [],\n      grades: [],\n      currentUser:  null \n\n      //  currentUser : {id: 2, user: \"teacher\", first_name: \"Carla\", last_name: null, username: \"carla\",img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CVUP08-d274...\"}\n      \n    //   // currentUser: {id: 4, user: \"student\", first_name: \"Alex\", last_name: null, username: \"alex\", level: 4, img: \"https://ca.slack-edge.com/T02MD9XTF-UU5CW4UJU-58c5...\"}\n    }\n  }\n\n\n  componentDidMount(){\n       // check if there is a current user in localStorage\n       if(localStorage.getItem(\"token\")){\n        console.log(\"token found\")\n        fetch(\"http://localhost:3001/decode_token\", {\n          headers: {\"Authenticate\": localStorage.token}\n        })\n        .then(resp => resp.json())\n        .then(data => {\n          console.log(\"data: \", data)\n          \n          this.updateCurrentUser(data)\n        })\n      } else{\n        console.log(\"no token found\")\n      }\n  }\n\n\n  updateCurrentUser =(currentUser) =>{\n\n    if(currentUser != null )  {\n      this.setState({currentUser: currentUser.user_data,\n                    userKlasses: currentUser.klasses,\n                    userAssignments: currentUser.assignments       \n    })\n    } else {\n      this.setState({currentUser: null})\n    } \n  }\n\n  \n\ncreateAssign =(newAssign) => {\n  // console.log(\"New Assing: \", newAssign)\n  \n  swal({\n    title: \"Created Successfully!\",\n   \n    icon: \"success\",\n    button: \"Continue!\",\n  });\n \n  let  arr=  [newAssign, ...this.state.userAssignments]\n \n  this.setState({userAssignments: arr }) \n}\n\neditAssigns = ( updatedAssign) => {\n  swal({\n    title: \"Edited Successfully!\",\n    text: \"You clicked the button!\",\n    icon: \"success\",\n    button: \"Continue!\",\n  });\n\n  let assignments = this.state.userAssignments \n assignments.forEach(a => { if (a.id === updatedAssign.id){\n                                a.title = updatedAssign.title\n                                a.klass_id = updatedAssign.klass_id\n                                a.content = updatedAssign.content\n                                a.deadline = updatedAssign.deadline\n                                a.updated_at = updatedAssign.updated_at\n                          }\n                          })\n    this.setState({userAssignments: assignments })\n}\n\nhandleDelete= (id) => {\n  swal({\n    title: \"Deleted Successfully!\",\n    text: \"You clicked the button!\",\n    icon: \"success\",\n    button: \"Continue!\",\n  });\n  fetch(`http://localhost:3001/assignments/${id}`,{ method: \"DELETE\" })\n const filtered =  this.state.userAssignments.filter(a => a.id !== id)\n  this.setState({userAssignments: filtered})\n  \n}\n //----- Logout ------//\n handleLogout = () => {\n  // console.log(\"\")\n  localStorage.removeItem(\"token\")\n  this.updateCurrentUser(null)\n}\n\nrender(){\n  console.log(\"userKlasses: \", this.state.userKlasses)\n\n  return (\n    \n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar currentUser = {this.state.currentUser} handleLogout={this.handleLogout}/>\n        <Switch>\n\n        <Route exact path = \"/\" component = {About}/>\n{/*         \n          <Route exact path = \"/login\" render= {() => (<LoginForm updateCurrentUser= {this.updateCurrentUser}/>)}/> */}\n           <Route exact path=\"/logout\" component = {About}/>\n          <Route exact path=\"/login\" render={() => (\n              this.state.currentUser === null ? <LoginForm updateCurrentUser={this.updateCurrentUser} /> \n              : <Redirect to=\"/classes\"/>\n            )}/>\n\n\n          {this.state.currentUser? <Route exact path = \"/classes\" render= {() => \n                                  (<HomePage   klasses={this.state.userKlasses}  />)} /> :<Redirect to=\"/login\"/> }\n        \n    \n          {this.state.currentUser  ?\n          <Route exact path = \"/classes/:id\" render= {(props) => \n            {\n              let id = props.match.params.id\n              // let klass = this.props.klasses.find(k => k.id == i)      \n              let klasses = this.state.userKlasses\n          \n               let klass\n               {klasses.length > 0 ? \n               klass = klasses.find(k => k.id == id)\n                : klass = null\n               }\n                             return klass? <MainPage2 klass = {klass} \n                             createAssign= {this.createAssign}\n                              assignments={this.state.userAssignments}\n                              editAssigns = {this.editAssigns}\n                              handleDelete ={this.handleDelete}\n                              currentUser = {this.state.currentUser}  \n                              \n                              />: \n                              <div className=\"ui blue active inverted dimmer\">\n                                <div className=\"ui text loader\">Loading</div>\n                              </div>\n  \n              }\n         \n           }/>\n       :<Redirect to=\"/\"/> }\n\n        \n          <Route render= {() => <div > Page Not Found 404</div>}/>\n          \n        </Switch>    \n      \n      </BrowserRouter> \n     \n   \n      \n    \n    </div>\n  );\n\n}\n\n  \n}\n\nconst mapStateToProps = (state) => {\n  // console.log(\"App's state: \", state.klasses)\n  return{\n    \n       klasses: state.klasses,\n       currentUser: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n\n      // props: () => {dispatch({type: \"FETCHED_KLASSES\"})}\n      // don't forget to invoke it\n      fetchingKlasses: () => { dispatch ( fetchingKlasses())}\n  }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n  \n\n\n\n\n// if(currentUser.user === \"teacher\"){\n    //   fetch(`http://localhost:3001/teachers/${currentUser.id}`)\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   // console.log(\"teacher data: \", data)\n      \n    //   this.setState({userAssignments: data.assignments})\n    // })\n  \n    // }else{\n    //   fetch(`http://localhost:3001/students/${currentUser.id}`)\n    //   .then(resp => resp.json())\n    //   .then(data => {\n    //     // console.log(\"student data: \", data)\n    //     this.setState({userAssignments: data.assignments})\n        \n      // })\n  //  } \n\n\n     // debugger\n             //let klass = {id: 1, name: \"Mirtle\", level:2, teacher_id: 1}\n              // return <MainPage klass = {klass} \n              //               createAssign= {this.createAssign}\n              //                assignments={this.state.userAssignments}\n              //                editAssigns = {this.editAssigns}\n              //                handleDelete ={this.handleDelete}\n              //                currentUser = {this.state.currentUser} \n                             \n              //                />"]},"metadata":{},"sourceType":"module"}